{"ast":null,"code":"import { Quote } from '../quote';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../quotes-form/quotes-form.component\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../highlight-qoute.directive\";\nimport * as i4 from \"../quote-details/quote-details.component\";\n\nfunction QuotesComponent_div_10_app_quote_details_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-quote-details\", 18);\n    i0.ɵɵlistener(\"isRead\", function QuotesComponent_div_10_app_quote_details_8_Template_app_quote_details_isRead_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.quoteDelete($event, i_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"quoty\", quote_r1);\n  }\n}\n\nfunction QuotesComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"h4\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function QuotesComponent_div_10_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r2 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.displayInfo(i_r2);\n    });\n    i0.ɵɵtext(5, \"See More\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, QuotesComponent_div_10_app_quote_details_8_Template, 1, 1, \"app-quote-details\", 13);\n    i0.ɵɵelementStart(9, \"span\", 14);\n    i0.ɵɵtext(10, \"Posted by: \");\n    i0.ɵɵelementStart(11, \"span\", 15);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\", 16);\n    i0.ɵɵtext(14, \"on: \");\n    i0.ɵɵelementStart(15, \"span\", 17);\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", quote_r1.title, \" \", quote_r1.maxlikes, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(quote_r1.quote);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", quote_r1.showInfo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(quote_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 6, quote_r1.datePosted, \"short\"));\n  }\n}\n\nexport let QuotesComponent = /*#__PURE__*/(() => {\n  class QuotesComponent {\n    constructor() {\n      this.title = 'Daily Quotes!';\n      this.quotes = [new Quote(1, 'Henry', 'Success', 'What you get by achieving your goals is not as important as what you become by achieving your goals.', 'Zig Zigler', new Date(2021, 2, 14), 0, 0), new Quote(2, 'Nimmoh', 'Life', 'It is possible to name everything and to destroy the world.', 'Kathy Acker', new Date(2021, 4, 11), 0, 0), new Quote(3, 'Mike', 'Control', '...a name is almost always a sort of cowardice---an attempt to confine a thing to being only what it is, rather than what it may be.', 'Jesse Ball', new Date(2021, 4, 16), 0, 0), new Quote(4, 'Ess', 'Computers', 'The spread of computers and the Internet will put jobs in two categories. People who tell computers what to do, and people who are told by computers what to do.', 'Marc Andreesen', new Date(2021, 4, 25), 0, 0), new Quote(5, 'Sam', 'Anger', 'Resentment and anger are bad for your blood pressure and your digestion.', 'Desmond Tutu', new Date(2021, 4, 28), 0, 0), new Quote(6, 'Alfred', 'Egoism', 'The only tyrant I accept in this world is the still voice within.', 'Mahatma Gandhi', new Date(2021, 5, 16), 0, 0)];\n    }\n\n    get sortQuotes() {\n      return this.quotes.sort((a, b) => {\n        return new Date(b.datePosted) - new Date(a.datePosted);\n      });\n    }\n\n    addedQuote(quote) {\n      let arraysize = this.quotes.length;\n      quote.id = arraysize + 1;\n      quote.completeDate = new Date(quote.completeDate);\n      this.quotes.push(quote);\n    }\n\n    quoteDelete(isRead, index) {\n      if (isRead) {\n        let toDelete = confirm(`Are you sure you want to delete this quote?`);\n\n        if (toDelete) {\n          this.quotes.splice(index, 1);\n        }\n      }\n    }\n\n    displayInfo(index) {\n      this.quotes[index].showInfo = !this.quotes[index].showInfo;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QuotesComponent.ɵfac = function QuotesComponent_Factory(t) {\n    return new (t || QuotesComponent)();\n  };\n\n  QuotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuotesComponent,\n    selectors: [[\"app-quotes\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[1, \"overlay\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-sm-3\"], [3, \"add\"], [1, \"col-sm-9\"], [1, \"all-cards\"], [\"class\", \"card\", \"style\", \"width: 24rem;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", 2, \"width\", \"24rem\"], [1, \"card-body\"], [\"appHighlightQoute\", \"\", 1, \"card-title\"], [\"id\", \"quotes-button\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [\"id\", \"param\", 1, \"card-text\"], [3, \"quoty\", \"isRead\", 4, \"ngIf\"], [1, \"card-subtitle\", \"mb-2\"], [\"id\", \"name\"], [\"id\", \"date\"], [\"id\", \"datecolor\"], [3, \"quoty\", \"isRead\"]],\n    template: function QuotesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"app-quotes-form\", 4);\n        i0.ɵɵlistener(\"add\", function QuotesComponent_Template_app_quotes_form_add_7_listener($event) {\n          return ctx.addedQuote($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵtemplate(10, QuotesComponent_div_10_Template, 18, 9, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, ctx.title), \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sortQuotes);\n      }\n    },\n    directives: [i1.QuotesFormComponent, i2.NgForOf, i3.HighlightQouteDirective, i2.NgIf, i4.QuoteDetailsComponent],\n    pipes: [i2.TitleCasePipe, i2.DatePipe],\n    styles: [\"h1[_ngcontent-%COMP%]{font-family:Reggae One,cursive;color:#fff;text-align:center;font-weight:bolder;padding-bottom:2%;padding-top:2%}h4[_ngcontent-%COMP%], span[_ngcontent-%COMP%]{font-family:Caveat,cursive}.overlay[_ngcontent-%COMP%]{background-color:#f0d4;border-radius:5px;margin:4% 4% 5%;padding-top:1%;padding-left:1%;padding-bottom:5%}#name[_ngcontent-%COMP%]{color:#0b2c02;font-weight:700}.all-cards[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-around}#quotes-button[_ngcontent-%COMP%]{float:right}.card[_ngcontent-%COMP%]{margin-bottom:2%;background-color:#f0f8ff;box-shadow:2px 2px 3px 2px #000}#date[_ngcontent-%COMP%]{float:right;font-size:14px}#datecolor[_ngcontent-%COMP%]{color:green;font-weight:00}.card-text[_ngcontent-%COMP%]{font-family:Courgette,cursive;font-weight:500;font-size:18px}\"]\n  });\n  return QuotesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}